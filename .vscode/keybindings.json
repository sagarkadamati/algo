// Place your key bindings in this file to overwrite the defaults
[
    {
        "key": "ctrl+shift+alt+s",
        "command": "workbench.action.toggleStatusbarVisibility",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFindWidget"
    },
    {
        "key": "ctrl+f",
        "command": "-actions.find"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+shift+b",
        "command": "-workbench.action.tasks.build"
    },
    {
        "key": "ctrl+p",
        "command": "cursorUp",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+n",
        "command": "cursorDown",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+f",
        "command": "cursorRight",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+b",
        "command": "cursorLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+f",
        "command": "actions.find"
    },
    {
        "key": "ctrl+; ctrl+r",
        "command": "editor.action.startFindReplaceAction"
    },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "explorerViewletFocus && explorerViewletVisible"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.terminal.focus",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer"
    },
    {
        "key": "ctrl+alt+e",
        "command": "search.action.focusActiveEditor",
        "when": "!editorTextFocus"
    },
    {
        "key": "ctrl+alt+t",
        "command": "workbench.action.terminal.focus",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+alt+e",
        "command": "workbench.view.explorer",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+e",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "explorerViewletFocus"
    },
    {
        "key": "ctrl+alt+f",
        "command": "cursorWordStartRight",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+f",
        "command": "cursorWordStartRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+alt+m",
        "command": "workbench.action.toggleMaximizedPanel"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction"
    },
    {
        "key": "ctrl+; ctrl+r",
        "command": "editor.action.startFindReplaceAction"
    },
    {
        "key": "ctrl+alt+b",
        "command": "cursorWordStartLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+b",
        "command": "cursorWordStartLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "-workbench.action.newWindow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+f",
        "command": "cursorRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+p",
        "command": "cursorUpSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "cursorDownSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+b",
        "command": "cursorLeftSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+e",
        "command": "cursorEndSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "cursorHomeSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+w",
        "command": "editor.action.clipboardCopyAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+y",
        "command": "editor.action.clipboardPasteAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; v",
        "command": "workbench.action.splitEditor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusSecondEditorGroup",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k h",
        "command": "workbench.action.moveActiveEditorGroupLeft",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k l",
        "command": "workbench.action.moveActiveEditorGroupRight",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+d",
        "command": "deleteRight",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+w",
        "command": "editor.action.clipboardCutAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+n",
        "command": "cursorPageDown",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+p",
        "command": "cursorPageUp",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+n",
        "command": "cursorPageDownSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+alt+p",
        "command": "cursorPageUpSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+h",
        "command": "-workbench.action.output.toggleOutput"
    },
    {
        "key": "ctrl+a",
        "command": "-editor.action.selectAll"
    },
    {
        "key": "ctrl+e",
        "command": "cursorLineEnd",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+a",
        "command": "cursorLineStart",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminalFocus"
    },
    {   "key": "ctrl+; w",
        "command": "workbench.action.closeActiveEditor"
    },
    {   "key": "ctrl+; ctrl+e",
        "command": "cursorBottom",
        "when": "editorTextFocus"
    },
    {   "key": "ctrl+shift+; ctrl+shift+e",
        "command": "cursorBottomSelect",
        "when": "editorTextFocus"
    },
    {   "key": "ctrl+; ctrl+b",
        "command": "cursorTop",
        "when": "editorTextFocus"
    },
    {   "key": "ctrl+shift+; ctrl+shift+b",
        "command": "cursorTopSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+i",
        "command": "cursorHome",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+d",
        "command": "git.openChange"
    },
    {
        "key": "alt+shift+n",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "alt+shift+p",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "alt+n",
        "command": "workbench.action.nextEditorInGroup"
    },
    {
        "key": "alt+p",
        "command": "workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+k f",
        "command": "-workbench.action.closeFolder"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+alt+g",
        "command": "editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+alt+g",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+; r",
        "command": "workbench.action.files.revert"
    },
    {
        "key": "alt+x",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g ctrl+g",
        "command": "workbench.view.scm"
    },
    {
        "key": "ctrl+g ctrl+a",
        "command": "git.commitStagedAmend"
    },
    {
        "key": "ctrl+shift+g ctrl+shift+a",
        "command": "git.commitAllAmend"
    },
    {
        "key": "ctrl+g ctrl+p",
        "command": "git.pull"
    },
    {
        "key": "ctrl+shift+g ctrl+shift+p",
        "command": "git.pushTo"
    },
    {
        "key": "ctrl+g ctrl+c",
        "command": "git.commit"
    },
    {
        "key": "ctrl+shift+g ctrl+shift+c",
        "command": "git.commitAllSigned"
    },
    {
        "key": "ctrl+g ctrl+s",
        "command": "git.stage"
    },
    {
        "key": "ctrl+shift+g ctrl+shift+s",
        "command": "git.stageAll"
    },
    {
        "key": "ctrl+g ctrl+u",
        "command": "git.unstage"
    },
    {
        "key": "ctrl+shift+g ctrl+shift+u",
        "command": "git.unstageAll"
    },
    {
        "key": "alt+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+shift+L",
        "command": "workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "ctrl+n",
        "command": "list.focusDown",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "list.focusUp",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+h",
        "command": "list.collapse",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "list.expand",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+p",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+meta+s",
        "command": "workbench.action.toggleStatusbarVisibility",
    },
    {
        "key": "ctrl+meta+a",
        "command": "workbench.action.toggleActivityBarVisibility",
    },
    {
        "key": "ctrl+meta+e",
        "command": "workbench.action.focusSideBar",
    },
    {
        "key": "ctrl+meta+t",
        "command": "workbench.action.toggleTabsVisibility"
    },
    {
        "key": "ctrl+meta+w",
        "command": "-workbench.action.toggleTabsVisibility"
    },
    {
        "key": "ctrl+shift+w",
        "command": "editor.action.toggleRenderWhitespace"
    }
]
